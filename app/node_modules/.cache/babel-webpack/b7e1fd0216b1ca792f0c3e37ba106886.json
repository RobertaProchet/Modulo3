{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst SERVER_URL = 'http://127.0.0.1:8000';\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    /**\r\n     * Constructor\r\n     */\n    constructor(http) {\n      this.http = http;\n      this.token = localStorage.getItem('token');\n    }\n    /**\r\n     * Returns the user token\r\n     */\n\n\n    getToken() {\n      return this.token;\n    }\n    /**\r\n     * Clear the user token\r\n     */\n\n\n    clearToken() {\n      this.token = null;\n      localStorage.removeItem('token');\n    }\n    /**\r\n     * Check if there is an user authenticated\r\n     */\n\n\n    isAuthenticated() {\n      return !!this.token;\n    }\n    /**\r\n     * Executes the authentication and updates the user token.\r\n     */\n\n\n    authenticate(username, password) {\n      const url = `${SERVER_URL}/api-token-auth/`;\n      const data = {\n        username,\n        password\n      };\n      return this.http.post(url, data).pipe(map(response => {\n        this.setToken(response.token);\n        return;\n      }));\n    }\n    /**\r\n     * Stores the user token\r\n     */\n\n\n    setToken(value) {\n      this.token = value;\n      localStorage.setItem('token', this.token);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}