{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { DEFAULT_ROUTE } from '../app-routing.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\n\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" Credenciais inv\\u00E1lidas. Por favor corrija e tente novamente. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, route, auth) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.auth = auth;\n      this.loginForm = this.formBuilder.group({\n        username: [null, Validators.required],\n        password: [null, Validators.required]\n      });\n      this.showError = false;\n    }\n\n    ngOnInit() {}\n\n    submit() {\n      // Check if the inputed data is valid\n      if (!this.loginForm.valid) {\n        return;\n      } // Disable errors\n\n\n      this.showError = false; // Execute the authentication with the API\n\n      const formData = this.loginForm.value;\n      this.auth.authenticate(formData.username, formData.password).subscribe(() => {\n        console.log('The login was successful.');\n        this.route.queryParams.subscribe(params => {\n          const targetUrl = params.redirectUrl ? params.redirectUrl : DEFAULT_ROUTE;\n          console.log(`Redirecting to ${targetUrl}`);\n          this.router.navigateByUrl(targetUrl).then();\n        });\n      }, error => {\n        console.error('Failed to login.');\n        console.error(error);\n        this.showError = true;\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[1, \"row\", \"justify-content-center\"], [1, \"col-6\", \"mt-5\"], [1, \"row\", \"justify-content-center\", \"m-5\"], [1, \"col-8\"], [3, \"formGroup\", \"submit\"], [1, \"row\"], [\"appearance\", \"fill\", 1, \"col-12\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"type\", \"password\", \"required\", \"\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"row\", \"justify-content-center\", \"mt-3\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [1, \"error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-card\");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"mat-card-title\");\n        i0.ɵɵtext(6, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-card-subtitle\");\n        i0.ɵɵtext(8, \"Por favor informe as suas credenciais.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_9_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(17, \"mat-label\");\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementStart(21, \"div\", 10);\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵtext(23, \" Entrar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n      }\n    },\n    directives: [i4.MatCard, i4.MatCardTitle, i4.MatCardSubtitle, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i7.NgIf, i8.MatButton],\n    styles: [\".error[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}